"""init

Revision ID: 8ff089d46460
Revises: 
Create Date: 2024-04-28 17:35:34.370536

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '8ff089d46460'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('create_by', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=False),
                    sa.Column('id_template', sa.Integer(), nullable=True),
                    sa.Column('description', sa.String(length=512), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('idx_create_by', 'task', ['create_by'], unique=False)
    op.create_index('idx_for_task', 'task', ['id'], unique=False)
    # op.create_index('idx_search_name_description', 'task',
    #                 [sa.text("(coalesce('name', '') || coalesce('description', ''))")], unique=False,
    #                 postgresql_using='gin', postgresql_with={'columns': 'gin_trgm_ops'})
    op.create_table('complete_task',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('task_id', sa.Integer(), nullable=False),
                    sa.Column('complete_at', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('planned_complete_at', sa.DateTime(timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('task_id')
                    )
    op.create_index('idx_complete_at', 'complete_task', ['complete_at'], unique=False)
    op.create_index('idx_for_complete_task', 'complete_task', ['id'], unique=False)
    op.create_index('idx_planned_complete_at', 'complete_task', ['planned_complete_at'], unique=False)
    op.create_table('notification_task',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('send_notification_at', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('task_id', sa.Integer(), nullable=False),
                    sa.Column('duration_send_notification_at', sa.Time(), nullable=True),
                    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('task_id')
                    )
    op.create_index('idx_for_notification_task', 'notification_task', ['id'], unique=False)
    op.create_index('idx_send_notification_at', 'notification_task', ['send_notification_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_send_notification_at', table_name='notification_task')
    op.drop_index('idx_for_notification_task', table_name='notification_task')
    op.drop_table('notification_task')
    op.drop_index('idx_planned_complete_at', table_name='complete_task')
    op.drop_index('idx_for_complete_task', table_name='complete_task')
    op.drop_index('idx_complete_at', table_name='complete_task')
    op.drop_table('complete_task')
    op.drop_index('idx_search_name_description', table_name='task', postgresql_using='gin',
                  postgresql_with={'columns': 'gin_trgm_ops'})
    op.drop_index('idx_for_task', table_name='task')
    op.drop_index('idx_create_by', table_name='task')
    op.drop_table('task')
    # ### end Alembic commands ###
